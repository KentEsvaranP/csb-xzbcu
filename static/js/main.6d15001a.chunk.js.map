{"version":3,"sources":["logo.svg","utils.js","reducers/loginReducer.js","login.js","App.js","reportWebVitals.js","actions/homeActionTypes.js","reducers/homeReducer.js","reducers/index.js","index.js","store/configureStore.js"],"names":["login","a","username","password","Promise","resolve","reject","setTimeout","initialState","isLoading","error","isLoggedIn","LoginReducer","state","action","type","fieldName","payload","LoginUseReducer","useReducer","dispatch","onSubmit","e","preventDefault","className","onClick","placeholder","value","onChange","currentTarget","autoComplete","disabled","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LOAD_HOME_PAGE_SUCCESS","homePage","all","types","Object","assign","homePagedata","rootReducer","combineReducers","initialstate","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d15001a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export async function login({ username, password }) {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (username === 'kent' && password === 'password') {\r\n          resolve();\r\n        } else {\r\n          reject();\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n  ","const initialState = {\r\n  username: '',\r\n  password: '',\r\n  isLoading: false,\r\n  error: '',\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst LoginReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case 'field': {\r\n        return {\r\n          ...state,\r\n          [action.fieldName]: action.payload,\r\n        };\r\n      }\r\n      case 'login': {\r\n        return {\r\n          ...state,\r\n          error: '',\r\n          isLoading: true,\r\n        };\r\n      }\r\n      case 'success': {\r\n        return {\r\n          ...state,\r\n          isLoggedIn: true,\r\n          isLoading: false,\r\n        };\r\n      }\r\n      case 'error': {\r\n        return {\r\n          ...state,\r\n          error: 'Incorrect username or password!',\r\n          isLoggedIn: false,\r\n          isLoading: false,\r\n          username: '',\r\n          password: '',\r\n        };\r\n      }\r\n      case 'logOut': {\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n        };\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\nexport default LoginReducer;","import React, { useReducer } from 'react';\r\nimport { login } from './utils';\r\nimport LoginReducer from './reducers/loginReducer';\r\n\r\nconst initialState = {\r\n    username: '',\r\n    password: '',\r\n    isLoading: false,\r\n    error: '',\r\n    isLoggedIn: false,\r\n  };\r\nconst LoginUseReducer = () => {\r\n    const [state, dispatch] = useReducer(LoginReducer, initialState);\r\n    const { username, password, isLoading, error, isLoggedIn } = state;\r\n  \r\n    const onSubmit = async (e) => {\r\n      e.preventDefault();\r\n  \r\n      dispatch({ type: 'login' });\r\n  \r\n      try {\r\n        await login({ username, password });\r\n        dispatch({ type: 'success' });\r\n      } catch (error) {\r\n        dispatch({ type: 'error' });\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div className='App'>\r\n        <div className='login-container'>\r\n          {isLoggedIn ? (\r\n            <>\r\n              <h1>Welcome {username}!</h1>\r\n              <button onClick={() => dispatch({ type: 'logOut' })}>\r\n                Log Out\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <form className='form' onSubmit={onSubmit}>\r\n              {error && <p className='error'>{error}</p>}\r\n              <p>Please Login!</p>\r\n              <input\r\n                type='text'\r\n                placeholder='username'\r\n                value={username}\r\n                onChange={(e) =>\r\n                  dispatch({\r\n                    type: 'field',\r\n                    fieldName: 'username',\r\n                    payload: e.currentTarget.value,\r\n                  })\r\n                }\r\n              />\r\n              <input\r\n                type='password'\r\n                placeholder='password'\r\n                autoComplete='new-password'\r\n                value={password}\r\n                onChange={(e) =>\r\n                  dispatch({\r\n                    type: 'field',\r\n                    fieldName: 'password',\r\n                    payload: e.currentTarget.value,\r\n                  })\r\n                }\r\n              />\r\n              <button className='submit' type='submit' disabled={isLoading}>\r\n                {isLoading ? 'Logging in...' : 'Log In'}\r\n              </button>\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default LoginUseReducer;","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport LoginUseReducer from \"./login\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <LoginUseReducer />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const LOAD_HOME_PAGE_SUCCESS = 'LOAD_HOME_PAGE_SUCCESS';","import * as types from '../actions/homeActionTypes';\r\n\r\nconst homePage = (state={all: []}, action) => {\r\n    switch (action.type){\r\n        case types.LOAD_HOME_PAGE_SUCCESS: {\r\n            return Object.assign({}, state, {all: action.homePagedata});\r\n        }\r\n        default:{\r\n            return state;}\r\n    }\r\n}\r\n\r\nexport default homePage;","import { combineReducers } from \"redux\";\r\nimport homePage from './homeReducer';\r\nimport LoginReducer from './loginReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    homePage\r\n    // LoginReducer\r\n});\r\n\r\nexport default rootReducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store/configureStore\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from '../reducers';\r\n\r\nexport default function configureStore(initialstate) {\r\n    let middleware;\r\n\r\n    return createStore(\r\n        rootReducer,\r\n        initialstate\r\n    );\r\n\r\n}"],"sourceRoot":""}